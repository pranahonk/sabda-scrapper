# Azure DevOps Pipeline for SABDA Scraper Go
trigger:
- main

variables:
  # Azure Service Connection (create in Azure DevOps)
  azureSubscription: 'your-azure-subscription'
  # Web app name
  webAppName: 'sabda-scraper-go'
  # Resource group
  resourceGroupName: 'rg-sabda-scraper'
  # Build configuration
  buildConfiguration: 'Release'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: 'ubuntu-latest'

    steps:
    - task: GoTool@0
      displayName: 'Use Go 1.21'
      inputs:
        version: '1.21'

    - task: Go@0
      displayName: 'go mod download'
      inputs:
        command: 'get'
        arguments: '-d'

    - task: Go@0
      displayName: 'go build'
      inputs:
        command: 'build'
        arguments: '-o $(Build.ArtifactStagingDirectory)/server ./cmd/server'

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(Build.ArtifactStagingDirectory)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      artifact: drop

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: 'production'
    pool:
      vmImage: 'ubuntu-latest'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            displayName: 'Azure Web App Deploy'
            inputs:
              azureSubscription: $(azureSubscription)
              appType: 'webAppLinux'
              appName: $(webAppName)
              package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
              runtimeStack: 'GO|1.21'
              startUpCommand: './server'
